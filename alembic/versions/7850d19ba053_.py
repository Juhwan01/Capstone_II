"""empty message

Revision ID: 7850d19ba053
Revises: 19fd40edba93
Create Date: 2025-02-03 15:38:17.166741

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7850d19ba053'
down_revision: Union[str, None] = '19fd40edba93'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user1_id', sa.Integer(), nullable=False),
    sa.Column('user2_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user1_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user2_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chats_id'), 'chats', ['id'], unique=False)
    op.create_table('group_purchases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('max_participants', sa.Integer(), nullable=False),
    sa.Column('current_participants', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_purchases_id'), 'group_purchases', ['id'], unique=False)
    op.create_table('sales',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ingredient_name', sa.String(), nullable=True),
    sa.Column('ingredient_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('location_lat', sa.Float(), nullable=False),
    sa.Column('location_lon', sa.Float(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_purchase_participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('group_buy_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_buy_id'], ['group_purchases.id'], ),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_purchase_participants_id'), 'group_purchase_participants', ['id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=False),
    sa.Column('sale_id', sa.Integer(), nullable=False),
    sa.Column('appointment_time', sa.DateTime(), nullable=False),
    sa.Column('seller_time', sa.DateTime(), nullable=True),
    sa.Column('buyer_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('ingredients', sa.Column('amount', sa.Integer(), nullable=False))
    op.drop_column('ingredients', 'nutrition')
    op.drop_column('ingredients', 'location_lat')
    op.drop_column('ingredients', 'location_lon')
    op.drop_column('ingredients', 'value')
    op.add_column('recipes', sa.Column('category', sa.String(length=255), nullable=True))
    op.add_column('recipes', sa.Column('calories', sa.Integer(), nullable=True))
    op.add_column('recipes', sa.Column('carbs', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('recipes', sa.Column('protein', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('recipes', sa.Column('fat', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('recipes', sa.Column('sodium', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('recipes', sa.Column('image_small', sa.String(length=255), nullable=True))
    op.add_column('recipes', sa.Column('image_large', sa.String(length=255), nullable=True))
    op.add_column('recipes', sa.Column('instructions', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('recipes', sa.Column('cooking_img', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.alter_column('recipes', 'ingredients',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=sa.Text(),
               nullable=True)
    op.drop_index('ix_recipes_id', table_name='recipes')
    op.drop_index('ix_recipes_name', table_name='recipes')
    op.drop_constraint('recipes_created_by_fkey', 'recipes', type_='foreignkey')
    op.drop_column('recipes', 'created_by')
    op.drop_column('recipes', 'difficulty')
    op.drop_column('recipes', 'created_at')
    op.drop_column('recipes', 'cooking_time')
    op.drop_column('recipes', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('recipes', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('recipes', sa.Column('cooking_time', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('recipes', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('recipes', sa.Column('difficulty', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('recipes', sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('recipes_created_by_fkey', 'recipes', 'users', ['created_by'], ['id'])
    op.create_index('ix_recipes_name', 'recipes', ['name'], unique=False)
    op.create_index('ix_recipes_id', 'recipes', ['id'], unique=False)
    op.alter_column('recipes', 'ingredients',
               existing_type=sa.Text(),
               type_=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.drop_column('recipes', 'cooking_img')
    op.drop_column('recipes', 'instructions')
    op.drop_column('recipes', 'image_large')
    op.drop_column('recipes', 'image_small')
    op.drop_column('recipes', 'sodium')
    op.drop_column('recipes', 'fat')
    op.drop_column('recipes', 'protein')
    op.drop_column('recipes', 'carbs')
    op.drop_column('recipes', 'calories')
    op.drop_column('recipes', 'category')
    op.add_column('ingredients', sa.Column('value', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('ingredients', sa.Column('location_lon', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('ingredients', sa.Column('location_lat', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('ingredients', sa.Column('nutrition', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_column('ingredients', 'amount')
    op.drop_table('transaction')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_group_purchase_participants_id'), table_name='group_purchase_participants')
    op.drop_table('group_purchase_participants')
    op.drop_table('sales')
    op.drop_index(op.f('ix_group_purchases_id'), table_name='group_purchases')
    op.drop_table('group_purchases')
    op.drop_index(op.f('ix_chats_id'), table_name='chats')
    op.drop_table('chats')
    # ### end Alembic commands ###
